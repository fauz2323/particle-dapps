/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/json-toy";
exports.ids = ["vendor-chunks/json-toy"];
exports.modules = {

/***/ "(ssr)/./node_modules/json-toy/index.js":
/*!****************************************!*\
  !*** ./node_modules/json-toy/index.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nlet travelJson = __webpack_require__(/*! ./lib/json-travel */ \"(ssr)/./node_modules/json-toy/lib/json-travel.js\"),\n    checkCircular = __webpack_require__(/*! ./lib/json-check-circular */ \"(ssr)/./node_modules/json-toy/lib/json-check-circular.js\"),\n    getValByKeyPath = __webpack_require__(/*! ./lib/json-get-val-by-keypath */ \"(ssr)/./node_modules/json-toy/lib/json-get-val-by-keypath.js\"),\n    treeify = __webpack_require__(/*! ./lib/json-treeify */ \"(ssr)/./node_modules/json-toy/lib/json-treeify.js\");\n\n// exports\nmodule.exports = {\n    /**\n     * get value of property in json obj\n     * eg: getValByKey({a:{b:{c:1}}}, \"a.b.c\") = 1\n     * @param json\n     * @param keyPath\n     * @param ownKeyCheck\n     * @returns {Array|*}\n     */\n    getValByKeyPath, // 通过keyPath获取json的属性值\n\n    /**\n     * Recursive traversal of json obj\n     * @param {Object}   json\n     * @param {Function} cb callback(key,val,curKeyPath,typeStr,isComplexObj,curDepth,isCircular) and context is parent obj\n     * @param {string}   rootAlias\n     * @param {Boolean}  safeMode   default is true\n     * @returns {Array}  keysArr\n     */\n    travelJson,\n\n    /**\n     * convert a json obj to tree-like string\n     * @param {Object} json\n     * @param  {Object} options\n     *         {String} options.rootName\n     *    {char|Number} options.space\n     *         {Number} options.vSpace\n     *        {Boolean} options.valueOut\n     * @returns {string|*} a tree-like string\n     */\n    treeify,\n    treeString: treeify,\n\n    /**\n     * check circular obj\n     * @param obj\n     * @returns {Object} {{isCircular: boolean, circularProps: Array}}\n     */\n    checkCircular\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbi10b3kvaW5kZXguanMiLCJtYXBwaW5ncyI6IjtBQUNBLGlCQUFpQixtQkFBTyxDQUFDLDJFQUFtQjtBQUM1QyxvQkFBb0IsbUJBQU8sQ0FBQywyRkFBMkI7QUFDdkQsc0JBQXNCLG1CQUFPLENBQUMsbUdBQStCO0FBQzdELGNBQWMsbUJBQU8sQ0FBQyw2RUFBb0I7O0FBRTFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLEdBQUcsR0FBRyxNQUFNO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBOztBQUVBO0FBQ0E7QUFDQSxlQUFlLFVBQVU7QUFDekIsZUFBZSxVQUFVO0FBQ3pCLGVBQWUsVUFBVTtBQUN6QixlQUFlLFVBQVU7QUFDekIsaUJBQWlCLFFBQVE7QUFDekI7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCLGdCQUFnQixRQUFRO0FBQ3hCLGdCQUFnQixRQUFRO0FBQ3hCLFdBQVcsYUFBYTtBQUN4QixnQkFBZ0IsUUFBUTtBQUN4QixlQUFlLFNBQVM7QUFDeEIsaUJBQWlCLFVBQVU7QUFDM0I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixVQUFVO0FBQzNCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BhcnRpY2xlLWNvbm5lY3RraXQtYXBwLy4vbm9kZV9tb2R1bGVzL2pzb24tdG95L2luZGV4LmpzPzRlNGQiXSwic291cmNlc0NvbnRlbnQiOlsiXG5sZXQgdHJhdmVsSnNvbiA9IHJlcXVpcmUoJy4vbGliL2pzb24tdHJhdmVsJyksXG4gICAgY2hlY2tDaXJjdWxhciA9IHJlcXVpcmUoJy4vbGliL2pzb24tY2hlY2stY2lyY3VsYXInKSxcbiAgICBnZXRWYWxCeUtleVBhdGggPSByZXF1aXJlKCcuL2xpYi9qc29uLWdldC12YWwtYnkta2V5cGF0aCcpLFxuICAgIHRyZWVpZnkgPSByZXF1aXJlKCcuL2xpYi9qc29uLXRyZWVpZnknKTtcblxuLy8gZXhwb3J0c1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgLyoqXG4gICAgICogZ2V0IHZhbHVlIG9mIHByb3BlcnR5IGluIGpzb24gb2JqXG4gICAgICogZWc6IGdldFZhbEJ5S2V5KHthOntiOntjOjF9fX0sIFwiYS5iLmNcIikgPSAxXG4gICAgICogQHBhcmFtIGpzb25cbiAgICAgKiBAcGFyYW0ga2V5UGF0aFxuICAgICAqIEBwYXJhbSBvd25LZXlDaGVja1xuICAgICAqIEByZXR1cm5zIHtBcnJheXwqfVxuICAgICAqL1xuICAgIGdldFZhbEJ5S2V5UGF0aCwgLy8g6YCa6L+Ha2V5UGF0aOiOt+WPlmpzb27nmoTlsZ7mgKflgLxcblxuICAgIC8qKlxuICAgICAqIFJlY3Vyc2l2ZSB0cmF2ZXJzYWwgb2YganNvbiBvYmpcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gICBqc29uXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2IgY2FsbGJhY2soa2V5LHZhbCxjdXJLZXlQYXRoLHR5cGVTdHIsaXNDb21wbGV4T2JqLGN1ckRlcHRoLGlzQ2lyY3VsYXIpIGFuZCBjb250ZXh0IGlzIHBhcmVudCBvYmpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gICByb290QWxpYXNcbiAgICAgKiBAcGFyYW0ge0Jvb2xlYW59ICBzYWZlTW9kZSAgIGRlZmF1bHQgaXMgdHJ1ZVxuICAgICAqIEByZXR1cm5zIHtBcnJheX0gIGtleXNBcnJcbiAgICAgKi9cbiAgICB0cmF2ZWxKc29uLFxuXG4gICAgLyoqXG4gICAgICogY29udmVydCBhIGpzb24gb2JqIHRvIHRyZWUtbGlrZSBzdHJpbmdcbiAgICAgKiBAcGFyYW0ge09iamVjdH0ganNvblxuICAgICAqIEBwYXJhbSAge09iamVjdH0gb3B0aW9uc1xuICAgICAqICAgICAgICAge1N0cmluZ30gb3B0aW9ucy5yb290TmFtZVxuICAgICAqICAgIHtjaGFyfE51bWJlcn0gb3B0aW9ucy5zcGFjZVxuICAgICAqICAgICAgICAge051bWJlcn0gb3B0aW9ucy52U3BhY2VcbiAgICAgKiAgICAgICAge0Jvb2xlYW59IG9wdGlvbnMudmFsdWVPdXRcbiAgICAgKiBAcmV0dXJucyB7c3RyaW5nfCp9IGEgdHJlZS1saWtlIHN0cmluZ1xuICAgICAqL1xuICAgIHRyZWVpZnksXG4gICAgdHJlZVN0cmluZzogdHJlZWlmeSxcblxuICAgIC8qKlxuICAgICAqIGNoZWNrIGNpcmN1bGFyIG9ialxuICAgICAqIEBwYXJhbSBvYmpcbiAgICAgKiBAcmV0dXJucyB7T2JqZWN0fSB7e2lzQ2lyY3VsYXI6IGJvb2xlYW4sIGNpcmN1bGFyUHJvcHM6IEFycmF5fX1cbiAgICAgKi9cbiAgICBjaGVja0NpcmN1bGFyXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/json-toy/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/json-toy/lib/json-check-circular.js":
/*!**********************************************************!*\
  !*** ./node_modules/json-toy/lib/json-check-circular.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("let travelJson = __webpack_require__(/*! ./json-travel */ \"(ssr)/./node_modules/json-toy/lib/json-travel.js\");\n/**\n * check circular obj\n * @param obj\n * @returns {{isCircular: boolean, circularProps: Array}}\n */\nfunction checkCircular(obj){\n    let isCcl = false;\n    let cclKeysArr = [];\n    travelJson(obj, (k, v, {keyPath, isCircular}) => {\n        if(isCircular){\n            isCcl = true;\n            cclKeysArr.push({\n                keyPath,\n                circularTo: v.slice(11, -1), // value: '[Circular->xxx]'  ==>  circularTo: 'xxx'\n                key: k,\n                value: v\n            });\n        }\n    }, 'ROOT', true);\n    return {\n        isCircular: isCcl,\n        circularProps: cclKeysArr\n    };\n}\n\nmodule.exports = checkCircular;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbi10b3kvbGliL2pzb24tY2hlY2stY2lyY3VsYXIuanMiLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLG1CQUFPLENBQUMsdUVBQWU7QUFDeEM7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLG9CQUFvQjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGFydGljbGUtY29ubmVjdGtpdC1hcHAvLi9ub2RlX21vZHVsZXMvanNvbi10b3kvbGliL2pzb24tY2hlY2stY2lyY3VsYXIuanM/ZDM0YSJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgdHJhdmVsSnNvbiA9IHJlcXVpcmUoJy4vanNvbi10cmF2ZWwnKTtcbi8qKlxuICogY2hlY2sgY2lyY3VsYXIgb2JqXG4gKiBAcGFyYW0gb2JqXG4gKiBAcmV0dXJucyB7e2lzQ2lyY3VsYXI6IGJvb2xlYW4sIGNpcmN1bGFyUHJvcHM6IEFycmF5fX1cbiAqL1xuZnVuY3Rpb24gY2hlY2tDaXJjdWxhcihvYmope1xuICAgIGxldCBpc0NjbCA9IGZhbHNlO1xuICAgIGxldCBjY2xLZXlzQXJyID0gW107XG4gICAgdHJhdmVsSnNvbihvYmosIChrLCB2LCB7a2V5UGF0aCwgaXNDaXJjdWxhcn0pID0+IHtcbiAgICAgICAgaWYoaXNDaXJjdWxhcil7XG4gICAgICAgICAgICBpc0NjbCA9IHRydWU7XG4gICAgICAgICAgICBjY2xLZXlzQXJyLnB1c2goe1xuICAgICAgICAgICAgICAgIGtleVBhdGgsXG4gICAgICAgICAgICAgICAgY2lyY3VsYXJUbzogdi5zbGljZSgxMSwgLTEpLCAvLyB2YWx1ZTogJ1tDaXJjdWxhci0+eHh4XScgID09PiAgY2lyY3VsYXJUbzogJ3h4eCdcbiAgICAgICAgICAgICAgICBrZXk6IGssXG4gICAgICAgICAgICAgICAgdmFsdWU6IHZcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfSwgJ1JPT1QnLCB0cnVlKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBpc0NpcmN1bGFyOiBpc0NjbCxcbiAgICAgICAgY2lyY3VsYXJQcm9wczogY2NsS2V5c0FyclxuICAgIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY2hlY2tDaXJjdWxhcjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/json-toy/lib/json-check-circular.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/json-toy/lib/json-get-val-by-keypath.js":
/*!**************************************************************!*\
  !*** ./node_modules/json-toy/lib/json-get-val-by-keypath.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("let {isObject, isString, isNill} = __webpack_require__(/*! ./type-of */ \"(ssr)/./node_modules/json-toy/lib/type-of.js\");\n/**\n * 通过keypath获取json的值，eg getValByKey({a:{b:{c:1}}}, \"a.b.c\") = 1\n * @param json\n * @param keyPath\n * @param ownKeyCheck\n * @returns {*}\n * 注意：没办法支持 路径中带有 a.b.c[1][2]这样的形式，建议写成a.b.c.1.2\n * a.b.c[1][2]这样的形式会被解析成 \"a\",\"b\",\"c[1][2]\"这样的属性名称\n * 这里之所以不支持这样的原因是：\n * 字符'['和']'也是可以作为属性名称存在的\n * a ={\n *    \"c[1][2]\": 1\n * }\n * 只能通过'.'操作符来进行分割\n * 然后，对于属性名称中，已经含有'.'的，要转化写法变成'&bull;'\n * 对于属性名中含有'&'的，需要转化成'&amp;',这样一来，如果属性名中含有'&bull;'，可以转化写成'&amp;bull;'\n */\nfunction getValByKey(json, keyPath, ownKeyCheck){\n\n    if(!isObject(json) || !isString(keyPath)){\n        throw new TypeError('Error type-in,check plz! (jsonObj,stringKeyPath)');\n    }\n    ownKeyCheck = isNill(ownKeyCheck) ? true : !!ownKeyCheck;\n    let v = json;\n    let propsArr = keyPath.split('.');\n    // let hasArrFlag = /\\[|]/g;\n    // let outPrint = \"obj['\" + propsArr.join(\"']['\") + \"'] \",\n    //     needWarn = false;\n    propsArr.forEach((k) => {\n        // if(!!k.match(hasArrFlag)){ needWarn = true; }\n        if(!isNill(v)){\n            k = k.replace(/&bull;/g, '.');//&bull; -> .\n            k = k.replace(/&amp;/g, '&'); //&amp; -> &  eg:如果你需要'&bull;'这个组合，可以写成'&amp;bull'\n            v = !ownKeyCheck ? v[k] : (v.hasOwnProperty(k) ? v[k] : undefined);\n        }else{\n            return v;\n        }\n    });\n    // needWarn && console.warn(\"It was deprecated that put char '[' or ']' in your keyPath,or in you property name\");\n    // needWarn && console.log(outPrint + \" = \" , v);\n    return v;\n}\n\nmodule.exports = getValByKey;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbi10b3kvbGliL2pzb24tZ2V0LXZhbC1ieS1rZXlwYXRoLmpzIiwibWFwcGluZ3MiOiJBQUFBLEtBQUssNEJBQTRCLEVBQUUsbUJBQU8sQ0FBQywrREFBVztBQUN0RDtBQUNBLHFDQUFxQyxHQUFHLEdBQUcsTUFBTTtBQUNqRDtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQztBQUNyQywyQkFBMkIsc0JBQXNCLGNBQWMsS0FBSztBQUNwRTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDO0FBQ3RDO0FBQ0EsaUNBQWlDLFNBQVMsU0FBUztBQUNuRCxnQ0FBZ0MsVUFBVSxRQUFRLHFCQUFxQixnQkFBZ0I7QUFDdkY7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BhcnRpY2xlLWNvbm5lY3RraXQtYXBwLy4vbm9kZV9tb2R1bGVzL2pzb24tdG95L2xpYi9qc29uLWdldC12YWwtYnkta2V5cGF0aC5qcz8wNTJkIl0sInNvdXJjZXNDb250ZW50IjpbImxldCB7aXNPYmplY3QsIGlzU3RyaW5nLCBpc05pbGx9ID0gcmVxdWlyZSgnLi90eXBlLW9mJyk7XG4vKipcbiAqIOmAmui/h2tleXBhdGjojrflj5Zqc29u55qE5YC877yMZWcgZ2V0VmFsQnlLZXkoe2E6e2I6e2M6MX19fSwgXCJhLmIuY1wiKSA9IDFcbiAqIEBwYXJhbSBqc29uXG4gKiBAcGFyYW0ga2V5UGF0aFxuICogQHBhcmFtIG93bktleUNoZWNrXG4gKiBAcmV0dXJucyB7Kn1cbiAqIOazqOaEj++8muayoeWKnuazleaUr+aMgSDot6/lvoTkuK3luKbmnIkgYS5iLmNbMV1bMl3ov5nmoLfnmoTlvaLlvI/vvIzlu7rorq7lhpnmiJBhLmIuYy4xLjJcbiAqIGEuYi5jWzFdWzJd6L+Z5qC355qE5b2i5byP5Lya6KKr6Kej5p6Q5oiQIFwiYVwiLFwiYlwiLFwiY1sxXVsyXVwi6L+Z5qC355qE5bGe5oCn5ZCN56ewXG4gKiDov5nph4zkuYvmiYDku6XkuI3mlK/mjIHov5nmoLfnmoTljp/lm6DmmK/vvJpcbiAqIOWtl+espidbJ+WSjCddJ+S5n+aYr+WPr+S7peS9nOS4uuWxnuaAp+WQjeensOWtmOWcqOeahFxuICogYSA9e1xuICogICAgXCJjWzFdWzJdXCI6IDFcbiAqIH1cbiAqIOWPquiDvemAmui/hycuJ+aTjeS9nOespuadpei/m+ihjOWIhuWJslxuICog54S25ZCO77yM5a+55LqO5bGe5oCn5ZCN56ew5Lit77yM5bey57uP5ZCr5pyJJy4n55qE77yM6KaB6L2s5YyW5YaZ5rOV5Y+Y5oiQJyZidWxsOydcbiAqIOWvueS6juWxnuaAp+WQjeS4reWQq+aciScmJ+eahO+8jOmcgOimgei9rOWMluaIkCcmYW1wOycs6L+Z5qC35LiA5p2l77yM5aaC5p6c5bGe5oCn5ZCN5Lit5ZCr5pyJJyZidWxsOyfvvIzlj6/ku6XovazljJblhpnmiJAnJmFtcDtidWxsOydcbiAqL1xuZnVuY3Rpb24gZ2V0VmFsQnlLZXkoanNvbiwga2V5UGF0aCwgb3duS2V5Q2hlY2spe1xuXG4gICAgaWYoIWlzT2JqZWN0KGpzb24pIHx8ICFpc1N0cmluZyhrZXlQYXRoKSl7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0Vycm9yIHR5cGUtaW4sY2hlY2sgcGx6ISAoanNvbk9iaixzdHJpbmdLZXlQYXRoKScpO1xuICAgIH1cbiAgICBvd25LZXlDaGVjayA9IGlzTmlsbChvd25LZXlDaGVjaykgPyB0cnVlIDogISFvd25LZXlDaGVjaztcbiAgICBsZXQgdiA9IGpzb247XG4gICAgbGV0IHByb3BzQXJyID0ga2V5UGF0aC5zcGxpdCgnLicpO1xuICAgIC8vIGxldCBoYXNBcnJGbGFnID0gL1xcW3xdL2c7XG4gICAgLy8gbGV0IG91dFByaW50ID0gXCJvYmpbJ1wiICsgcHJvcHNBcnIuam9pbihcIiddWydcIikgKyBcIiddIFwiLFxuICAgIC8vICAgICBuZWVkV2FybiA9IGZhbHNlO1xuICAgIHByb3BzQXJyLmZvckVhY2goKGspID0+IHtcbiAgICAgICAgLy8gaWYoISFrLm1hdGNoKGhhc0FyckZsYWcpKXsgbmVlZFdhcm4gPSB0cnVlOyB9XG4gICAgICAgIGlmKCFpc05pbGwodikpe1xuICAgICAgICAgICAgayA9IGsucmVwbGFjZSgvJmJ1bGw7L2csICcuJyk7Ly8mYnVsbDsgLT4gLlxuICAgICAgICAgICAgayA9IGsucmVwbGFjZSgvJmFtcDsvZywgJyYnKTsgLy8mYW1wOyAtPiAmICBlZzrlpoLmnpzkvaDpnIDopoEnJmJ1bGw7J+i/meS4que7hOWQiO+8jOWPr+S7peWGmeaIkCcmYW1wO2J1bGwnXG4gICAgICAgICAgICB2ID0gIW93bktleUNoZWNrID8gdltrXSA6ICh2Lmhhc093blByb3BlcnR5KGspID8gdltrXSA6IHVuZGVmaW5lZCk7XG4gICAgICAgIH1lbHNle1xuICAgICAgICAgICAgcmV0dXJuIHY7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICAvLyBuZWVkV2FybiAmJiBjb25zb2xlLndhcm4oXCJJdCB3YXMgZGVwcmVjYXRlZCB0aGF0IHB1dCBjaGFyICdbJyBvciAnXScgaW4geW91ciBrZXlQYXRoLG9yIGluIHlvdSBwcm9wZXJ0eSBuYW1lXCIpO1xuICAgIC8vIG5lZWRXYXJuICYmIGNvbnNvbGUubG9nKG91dFByaW50ICsgXCIgPSBcIiAsIHYpO1xuICAgIHJldHVybiB2O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldFZhbEJ5S2V5O1xuXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/json-toy/lib/json-get-val-by-keypath.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/json-toy/lib/json-travel.js":
/*!**************************************************!*\
  !*** ./node_modules/json-toy/lib/json-travel.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("let {getTypeOf, isObject, isFunction, isString, isSpreadable, isNill} = __webpack_require__(/*! ./type-of */ \"(ssr)/./node_modules/json-toy/lib/type-of.js\");\n/**\n * 递归遍历一个json\n * @param {Object} json\n * @param {Function} cb callback(key,val,curKeyPath,typeStr,isComplexObj,curDepth,isCircular) and context is parent obj\n * @param {string} rootAlias\n * @param {Boolean} safeMode default is true\n * @returns {Array} keysArr\n */\nfunction travelJson(json, cb, rootAlias, safeMode){\n    if(!isObject(json)){\n        throw new TypeError('The first param should be an Object instance!'); \n    }\n    // 安全模式\n    safeMode = safeMode === undefined ? true : safeMode;\n    let safeStack = [];//记录safe检查时候的对象\n    let safeKeys = []; //记录safe检查时候的key值\n    // res\n    let keysArr = [];\n    let needCb = isFunction(cb);\n    rootAlias = (isString(rootAlias) ? rootAlias : '') || 'ROOT';\n    // loop\n    function travel(obj, curKeyPath, depth, cb){\n        if(!isNill(obj)){\n            // safeMode\n            if(safeMode){\n                let objIndex = safeStack.indexOf(obj);\n                if(~objIndex){// if found it\n                    safeStack.splice(objIndex + 1);// delete all before it\n                    safeKeys.splice(objIndex + 1);// delete all before it\n                }else{\n                    safeStack.push(obj);// push\n                    safeKeys.push(curKeyPath);\n                }\n            }\n            // loop\n            let keys = Object.keys(obj);\n            const lastIndex = keys.length - 1;\n            keys.forEach((k, i) => {\n                let isFirstChild = i === 0;\n                let isLastChild = i === lastIndex;\n                //这里即使curKeyPath为空字符串\"\"也请加上\".\",这样做是为了统一的循环次数，不管rootAlias是否为空字符串\"\"\n                let newKeyPath = `${curKeyPath}.${k}`;\n                keysArr.push(`${newKeyPath}`);//push a new string\n                // 记录下层级\n                let curDepth = depth + 1;\n                // 值\n                let v = obj[k];\n                let isCircular = false;\n                // safeMode\n                if(safeMode){\n                    let kIndex = safeStack.indexOf(v);\n                    if(~kIndex){// Circular\n                        isCircular = true;\n                        v = `[Circular->${safeKeys[kIndex]}]`;\n                    }else{\n                        isCircular = false;\n                        v = obj[k];\n                    }\n                }\n                // 是否可以再展开，这里，函数被视为不可再展开\n                let spreadable = isSpreadable(v) && !isFunction(v);\n                // do sth in callback...\n                // needCb && cb.call(obj, k, v, `${newKeyPath}`, getTypeOf(v), spreadable, curDepth, isCircular, isFirstChild, isLastChild);\n                needCb && cb.call(obj, k, v, {\n                    keyPath: `${newKeyPath}`,\n                    depth: curDepth,\n                    type: getTypeOf(v),\n                    isCircular,\n                    isSpreadable: spreadable,\n                    isFirst: isFirstChild,\n                    isLast: isLastChild\n                });\n                // then travel in deep\n                if(spreadable){\n                    travel(v, newKeyPath, curDepth, cb);\n                }\n            });\n        }\n    }\n    // do on catch mode\n    try{\n        travel(json, rootAlias, 1, cb);// 栈溢出，递归次数导致内存超限\n    }catch(eTravel){\n        try{\n            JSON.stringify(json);\n        }catch(eStringify){\n            throw eStringify;\n        }\n        throw eTravel;\n    }\n    return keysArr;\n}\n\nmodule.exports = travelJson;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbi10b3kvbGliL2pzb24tdHJhdmVsLmpzIiwibWFwcGluZ3MiOiJBQUFBLEtBQUssaUVBQWlFLEVBQUUsbUJBQU8sQ0FBQywrREFBVztBQUMzRjtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsVUFBVTtBQUNyQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxTQUFTO0FBQ3BCLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2Qix1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUIsbURBQW1EO0FBQ25ELGtEQUFrRDtBQUNsRCxpQkFBaUI7QUFDakIsd0NBQXdDO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLFdBQVcsR0FBRyxFQUFFO0FBQ3BELGdDQUFnQyxXQUFXLEdBQUc7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQztBQUNoQztBQUNBLDBDQUEwQyxpQkFBaUI7QUFDM0QscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELFdBQVc7QUFDOUQ7QUFDQSxnQ0FBZ0MsV0FBVztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUM7QUFDdkMsS0FBSztBQUNMO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGFydGljbGUtY29ubmVjdGtpdC1hcHAvLi9ub2RlX21vZHVsZXMvanNvbi10b3kvbGliL2pzb24tdHJhdmVsLmpzPzAxZjIiXSwic291cmNlc0NvbnRlbnQiOlsibGV0IHtnZXRUeXBlT2YsIGlzT2JqZWN0LCBpc0Z1bmN0aW9uLCBpc1N0cmluZywgaXNTcHJlYWRhYmxlLCBpc05pbGx9ID0gcmVxdWlyZSgnLi90eXBlLW9mJyk7XG4vKipcbiAqIOmAkuW9kumBjeWOhuS4gOS4qmpzb25cbiAqIEBwYXJhbSB7T2JqZWN0fSBqc29uXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYiBjYWxsYmFjayhrZXksdmFsLGN1cktleVBhdGgsdHlwZVN0cixpc0NvbXBsZXhPYmosY3VyRGVwdGgsaXNDaXJjdWxhcikgYW5kIGNvbnRleHQgaXMgcGFyZW50IG9ialxuICogQHBhcmFtIHtzdHJpbmd9IHJvb3RBbGlhc1xuICogQHBhcmFtIHtCb29sZWFufSBzYWZlTW9kZSBkZWZhdWx0IGlzIHRydWVcbiAqIEByZXR1cm5zIHtBcnJheX0ga2V5c0FyclxuICovXG5mdW5jdGlvbiB0cmF2ZWxKc29uKGpzb24sIGNiLCByb290QWxpYXMsIHNhZmVNb2RlKXtcbiAgICBpZighaXNPYmplY3QoanNvbikpe1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdUaGUgZmlyc3QgcGFyYW0gc2hvdWxkIGJlIGFuIE9iamVjdCBpbnN0YW5jZSEnKTsgXG4gICAgfVxuICAgIC8vIOWuieWFqOaooeW8j1xuICAgIHNhZmVNb2RlID0gc2FmZU1vZGUgPT09IHVuZGVmaW5lZCA/IHRydWUgOiBzYWZlTW9kZTtcbiAgICBsZXQgc2FmZVN0YWNrID0gW107Ly/orrDlvZVzYWZl5qOA5p+l5pe25YCZ55qE5a+56LGhXG4gICAgbGV0IHNhZmVLZXlzID0gW107IC8v6K6w5b2Vc2FmZeajgOafpeaXtuWAmeeahGtleeWAvFxuICAgIC8vIHJlc1xuICAgIGxldCBrZXlzQXJyID0gW107XG4gICAgbGV0IG5lZWRDYiA9IGlzRnVuY3Rpb24oY2IpO1xuICAgIHJvb3RBbGlhcyA9IChpc1N0cmluZyhyb290QWxpYXMpID8gcm9vdEFsaWFzIDogJycpIHx8ICdST09UJztcbiAgICAvLyBsb29wXG4gICAgZnVuY3Rpb24gdHJhdmVsKG9iaiwgY3VyS2V5UGF0aCwgZGVwdGgsIGNiKXtcbiAgICAgICAgaWYoIWlzTmlsbChvYmopKXtcbiAgICAgICAgICAgIC8vIHNhZmVNb2RlXG4gICAgICAgICAgICBpZihzYWZlTW9kZSl7XG4gICAgICAgICAgICAgICAgbGV0IG9iakluZGV4ID0gc2FmZVN0YWNrLmluZGV4T2Yob2JqKTtcbiAgICAgICAgICAgICAgICBpZih+b2JqSW5kZXgpey8vIGlmIGZvdW5kIGl0XG4gICAgICAgICAgICAgICAgICAgIHNhZmVTdGFjay5zcGxpY2Uob2JqSW5kZXggKyAxKTsvLyBkZWxldGUgYWxsIGJlZm9yZSBpdFxuICAgICAgICAgICAgICAgICAgICBzYWZlS2V5cy5zcGxpY2Uob2JqSW5kZXggKyAxKTsvLyBkZWxldGUgYWxsIGJlZm9yZSBpdFxuICAgICAgICAgICAgICAgIH1lbHNle1xuICAgICAgICAgICAgICAgICAgICBzYWZlU3RhY2sucHVzaChvYmopOy8vIHB1c2hcbiAgICAgICAgICAgICAgICAgICAgc2FmZUtleXMucHVzaChjdXJLZXlQYXRoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBsb29wXG4gICAgICAgICAgICBsZXQga2V5cyA9IE9iamVjdC5rZXlzKG9iaik7XG4gICAgICAgICAgICBjb25zdCBsYXN0SW5kZXggPSBrZXlzLmxlbmd0aCAtIDE7XG4gICAgICAgICAgICBrZXlzLmZvckVhY2goKGssIGkpID0+IHtcbiAgICAgICAgICAgICAgICBsZXQgaXNGaXJzdENoaWxkID0gaSA9PT0gMDtcbiAgICAgICAgICAgICAgICBsZXQgaXNMYXN0Q2hpbGQgPSBpID09PSBsYXN0SW5kZXg7XG4gICAgICAgICAgICAgICAgLy/ov5nph4zljbPkvb9jdXJLZXlQYXRo5Li656m65a2X56ym5LiyXCJcIuS5n+ivt+WKoOS4ilwiLlwiLOi/meagt+WBmuaYr+S4uuS6hue7n+S4gOeahOW+queOr+asoeaVsO+8jOS4jeeuoXJvb3RBbGlhc+aYr+WQpuS4uuepuuWtl+espuS4slwiXCJcbiAgICAgICAgICAgICAgICBsZXQgbmV3S2V5UGF0aCA9IGAke2N1cktleVBhdGh9LiR7a31gO1xuICAgICAgICAgICAgICAgIGtleXNBcnIucHVzaChgJHtuZXdLZXlQYXRofWApOy8vcHVzaCBhIG5ldyBzdHJpbmdcbiAgICAgICAgICAgICAgICAvLyDorrDlvZXkuIvlsYLnuqdcbiAgICAgICAgICAgICAgICBsZXQgY3VyRGVwdGggPSBkZXB0aCArIDE7XG4gICAgICAgICAgICAgICAgLy8g5YC8XG4gICAgICAgICAgICAgICAgbGV0IHYgPSBvYmpba107XG4gICAgICAgICAgICAgICAgbGV0IGlzQ2lyY3VsYXIgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAvLyBzYWZlTW9kZVxuICAgICAgICAgICAgICAgIGlmKHNhZmVNb2RlKXtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGtJbmRleCA9IHNhZmVTdGFjay5pbmRleE9mKHYpO1xuICAgICAgICAgICAgICAgICAgICBpZih+a0luZGV4KXsvLyBDaXJjdWxhclxuICAgICAgICAgICAgICAgICAgICAgICAgaXNDaXJjdWxhciA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICB2ID0gYFtDaXJjdWxhci0+JHtzYWZlS2V5c1trSW5kZXhdfV1gO1xuICAgICAgICAgICAgICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlzQ2lyY3VsYXIgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHYgPSBvYmpba107XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8g5piv5ZCm5Y+v5Lul5YaN5bGV5byA77yM6L+Z6YeM77yM5Ye95pWw6KKr6KeG5Li65LiN5Y+v5YaN5bGV5byAXG4gICAgICAgICAgICAgICAgbGV0IHNwcmVhZGFibGUgPSBpc1NwcmVhZGFibGUodikgJiYgIWlzRnVuY3Rpb24odik7XG4gICAgICAgICAgICAgICAgLy8gZG8gc3RoIGluIGNhbGxiYWNrLi4uXG4gICAgICAgICAgICAgICAgLy8gbmVlZENiICYmIGNiLmNhbGwob2JqLCBrLCB2LCBgJHtuZXdLZXlQYXRofWAsIGdldFR5cGVPZih2KSwgc3ByZWFkYWJsZSwgY3VyRGVwdGgsIGlzQ2lyY3VsYXIsIGlzRmlyc3RDaGlsZCwgaXNMYXN0Q2hpbGQpO1xuICAgICAgICAgICAgICAgIG5lZWRDYiAmJiBjYi5jYWxsKG9iaiwgaywgdiwge1xuICAgICAgICAgICAgICAgICAgICBrZXlQYXRoOiBgJHtuZXdLZXlQYXRofWAsXG4gICAgICAgICAgICAgICAgICAgIGRlcHRoOiBjdXJEZXB0aCxcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogZ2V0VHlwZU9mKHYpLFxuICAgICAgICAgICAgICAgICAgICBpc0NpcmN1bGFyLFxuICAgICAgICAgICAgICAgICAgICBpc1NwcmVhZGFibGU6IHNwcmVhZGFibGUsXG4gICAgICAgICAgICAgICAgICAgIGlzRmlyc3Q6IGlzRmlyc3RDaGlsZCxcbiAgICAgICAgICAgICAgICAgICAgaXNMYXN0OiBpc0xhc3RDaGlsZFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIC8vIHRoZW4gdHJhdmVsIGluIGRlZXBcbiAgICAgICAgICAgICAgICBpZihzcHJlYWRhYmxlKXtcbiAgICAgICAgICAgICAgICAgICAgdHJhdmVsKHYsIG5ld0tleVBhdGgsIGN1ckRlcHRoLCBjYik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gZG8gb24gY2F0Y2ggbW9kZVxuICAgIHRyeXtcbiAgICAgICAgdHJhdmVsKGpzb24sIHJvb3RBbGlhcywgMSwgY2IpOy8vIOagiOa6ouWHuu+8jOmAkuW9kuasoeaVsOWvvOiHtOWGheWtmOi2hemZkFxuICAgIH1jYXRjaChlVHJhdmVsKXtcbiAgICAgICAgdHJ5e1xuICAgICAgICAgICAgSlNPTi5zdHJpbmdpZnkoanNvbik7XG4gICAgICAgIH1jYXRjaChlU3RyaW5naWZ5KXtcbiAgICAgICAgICAgIHRocm93IGVTdHJpbmdpZnk7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgZVRyYXZlbDtcbiAgICB9XG4gICAgcmV0dXJuIGtleXNBcnI7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gdHJhdmVsSnNvbjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/json-toy/lib/json-travel.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/json-toy/lib/json-treeify.js":
/*!***************************************************!*\
  !*** ./node_modules/json-toy/lib/json-treeify.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("let { isString, isNill, isNaN, isObject, isSpreadable } = __webpack_require__(/*! ./type-of */ \"(ssr)/./node_modules/json-toy/lib/type-of.js\");\nlet travelJson = __webpack_require__(/*! ./json-travel */ \"(ssr)/./node_modules/json-toy/lib/json-travel.js\");\n\n\n/*\n * escape string\n * https://github.com/douglascrockford/JSON-js/blob/e39db4b7e6249f04a195e7dd0840e610cc9e941e/json2.js#L195\n */\n// eslint-disable-next-line\nlet escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n    meta = { // table of character substitutions\n        '\\b': '\\\\b',\n        '\\t': '\\\\t',\n        '\\n': '\\\\n',\n        '\\f': '\\\\f',\n        '\\r': '\\\\r',\n        '\"': '\\\\\"',\n        '\\\\': '\\\\\\\\'\n    };\nfunction escapeString(string) {\n    // If the string contains no control characters, no quote characters, and no\n    // backslash characters, then we can safely slap some quotes around it.\n    // Otherwise we must also replace the offending characters with safe escape\n    // sequences.\n    escapable.lastIndex = 0;//复原\n    return escapable.test(string) ? `\"${string.replace(escapable, (a) => {\n        let c = meta[a];\n        return typeof c === 'string' ?\n            c :\n            `\\\\u${(`0000${a.charCodeAt(0).toString(16)}`).slice(-4)}`;\n    })}\"` : `\"${string}\"`;\n}\n\n\nlet _TreeChar_ = {\n    I: '│',\n    T: '├',\n    L: '└',\n    _: '─',\n    SPLIT: ':',\n    1: ' ',\n    2: '  ',\n    3: '   ',\n    4: '    ',\n    5: '     ',\n    6: '      ',\n    7: '       ',\n    8: '        ',\n    9: '         ',\n    10: '          '\n};\n\nfunction _isStartWith(chars){\n    let c = chars.join('|');\n    let reg = new RegExp(`^(${c})+`);\n    return function(str){\n        return isString(str) && !!str.match(reg);\n    };\n}\nlet isNodeStr = _isStartWith([_TreeChar_.T, _TreeChar_.L, 'ROOT']);\n\nlet _RegTreeLinkChars = new RegExp(`^(${[_TreeChar_.I, _TreeChar_.T, _TreeChar_._, _TreeChar_.L].join('|')})`);\nfunction replaceTreeLinkChar(str){\n    let check = isString(str) && str.match(_RegTreeLinkChars);\n    return check && check.length ? `'${check[1]}'${str.substr(1)}` : str;\n}\n\nfunction checkNextSibling(w, h, arr){\n    let i, hasNextSibling = false;\n    for(i=(h+1); i<arr.length; i++){\n        let ele = arr[i][w];\n        if(undefined===ele){\n            break;\n        }else if(isNodeStr(`${ele}`)){\n            hasNextSibling = true;\n            break;\n        }\n    }\n    return {\n        wPos: w,\n        hPos: i,\n        isLast: !hasNextSibling\n    };\n}\n//修复简单粗暴生成的二位数字，以便生成正确的节点连接符\nfunction fixArr(arr){\n    let regNode = new RegExp(`^${_TreeChar_.T}`, 'g'),\n        regVert = new RegExp(`^${_TreeChar_.I}`, 'g'),\n        S = ' ';\n    let i, iLen = arr.length;\n    for(i=0; i<iLen; i++){\n        let row = arr[i];\n        for(let j=0; j<row.length; j++){\n            let o = row[j];\n            if(isNodeStr(o)){\n                let checkNext = checkNextSibling(j, i, arr);\n                if(checkNext.isLast){\n                    // \"├\" => \"└\", 其实不做也行，因为 line236 中，已经判断并处理过\n                    arr[i][j] = o.replace(regNode, _TreeChar_.L);\n                    // 批量消除多余的\"│\"字符\n                    for(let c=i+1; c<checkNext.hPos; c++){\n                        if(arr[c]){\n                            if(!!arr[c][j] && !!arr[c][j].match(regVert)){\n                                // \"│\" => \" \"\n                                arr[c][j] = arr[c][j].replace(regVert, S);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    // fix root:\n    //   \"└\" => \"\",，消除\"└\"\n    //   \"─\" => \" \"，转化多余的\"─\"\n    let regSimRoot1 = new RegExp(_TreeChar_._, 'gi'),\n        regSimRoot2 = new RegExp(`${_TreeChar_.T}|${_TreeChar_.L}`, 'g');\n    arr[0][0] = arr[0][0].replace(regSimRoot1, ' ').replace(regSimRoot2, '');\n\n    return arr;\n}\n// '*' ---repeat-5---> '*****'\nfunction repeatChar(char, n){\n    let res = '';\n    char = char.charAt(0);\n    n = parseInt(n) || 0;\n    n = n > 0 ? n : 0;\n    while(n--) {\n        res += char;\n    }\n    return res;\n}\n// format input config\nfunction formatOption(options = {}){\n    // config\n    let {jsonName, space, vSpace, needValueOut, msReturnChar} = options || {};//不做空值保护，后面挨个做\n    // root name\n    jsonName = (isString(jsonName) ? jsonName : 0) || 'ROOT';\n    // horizon space\n    if ('\\t'===space) {\n        space = 1;\n    } else {\n        space = parseInt(space);\n        space = isNaN(space) ? 3 : space;\n        space = space <= 0 ? 1 : space > 8 ? 8 : space;//1 <= space <= 8\n    }\n    // vertical space\n    vSpace = parseInt(vSpace);\n    vSpace = isNaN(vSpace) ? (space > 5 ? 2 : 1) : vSpace;\n    vSpace = vSpace< 0 ? 0 : vSpace > 2 ? 2 : vSpace;//0 <= vSpace <= 2\n    // whether value should print out\n    needValueOut = isNill(needValueOut) ? true : !!needValueOut;\n    return {jsonName, space, vSpace, needValueOut, msReturnChar};\n}\n\n\n/**\n * treeify\n *   view process with 'example/img/flow.png'\n * @param {Object} json\n * @param  {Object} options\n *         {String} options.rootName\n *    {char|Number} options.space  [1,8]\n *         {Number} options.vSpace [0,2]\n *        {Boolean} options.valueOut\n *        {Boolean} options.msReturnChar '\\r'\n * @returns {string} a tree-like string\n */\nfunction treeify(json, options){\n    // config\n    let {jsonName, space, vSpace, needValueOut, msReturnChar} = formatOption(options);\n\n    // check json content\n    if(isNill(json)){\n        return `${jsonName}'s content is ${String(json)}`;\n    }else if(isObject.isEmptyOwn(json)){\n        return `${jsonName}'s content is empty!`;\n    }else if(!isSpreadable(json)){\n        return `${jsonName}'s content is ${isString(json) ? escapeString(json) : String(json)}`;\n    }\n\n    // 间距\n    let _I_ = _TreeChar_.I + _TreeChar_[space],\n        // 为了美观一点，控制节点间距 1->0 2->0 3->1 4->1 5->2 6->2 7->3 8->3\n        _T_ = `${_TreeChar_.T + repeatChar(_TreeChar_._, parseInt((space - 1) / 2))} `,\n        _L_ = `${_TreeChar_.L + repeatChar(_TreeChar_._, parseInt((space - 1) / 2))} `,\n        SPLIT = `${_TreeChar_.SPLIT} `;\n    let ft = (Math.floor(jsonName.length / 2)) % 10; // 左间距 max 10\n    let _rT_ = `${_TreeChar_.T} `; // 求取根节点的符号\n    let _I1_ = _TreeChar_.I + repeatChar(' ', ft-1); // 最左边的符号和间距\n\n    //res:用于存储节点信息的二维数组,末尾显式加上值undefined来区分是否为父节点\n    let res = [\n        [_rT_ + jsonName, undefined]\n    ];\n    for(let q=0; q < vSpace; q++){ // vertical-space\n        res.push([_I1_, _I_]);\n    }\n\n    // travel\n    // travelJson(json, (key, value, curKeyPath, typeStr, isSpreadable, curDepth) => {\n    //     let depth = curDepth;\n    travelJson(json, (key, value, option = {}) => {\n        let { type, isSpreadable, depth, isLast } = option || {};\n        let typeStr = type;\n        let v;\n        if (isSpreadable) {\n            v = undefined;// 显式的赋值undefined，仅仅是为了标识区别出‘可拓展节点’（含有子属性的父节点）\n        } else {\n            if(needValueOut){\n                if(typeStr==='string'){\n                    // 如果v值中就包含了特殊连接符号，需要转换一下\n                    v = replaceTreeLinkChar(value);//v = value; //其实不转也行的\n                    v = escapeString(v);\n                }else if(typeStr==='array'){\n                    v = '[]';\n                }else if(typeStr==='object'){\n                    v = '{}';\n                }else if(typeStr==='function'){\n                    v = '[function code]';\n                }else{\n                    v = String(value);\n                }\n                // 只有叶子节点才放值，父节点放undefined,采用显式赋值undefined作为父节点的标识（显式加入undefined元素可以占一个位置，会增加数组的length）\n                v = SPLIT + v;\n            } else {\n                v = '';// 不输出值，（此时应该是空字符串，而非undefined!，不然跟父节点混淆了）\n            }\n        }\n\n        let lineArr = [], i;// res[n]\n        for(i=1; i<depth; i++){// 左边缩进用的元素\n            lineArr.push(i===1?_I1_:_I_);//首元素加入的是_I1_\n        }\n        lineArr.push((isLast ? _L_ : _T_) + escapeString(key).slice(1, -1));// 节点名\n        lineArr.push(v);// 节点值\n\n        res.push(lineArr);\n\n        // vertical-space\n        for(let vs=0; vs<vSpace; vs++){\n            res.push(lineArr.map((item, index) => {\n                let isFirst = index===0, //首元素加入的是_I1_\n                    isLast = index===(lineArr.length-1),\n                    isSpreadableNodeEndFlag = isLast && item===undefined;\n                return index<(lineArr.length-1) || isSpreadableNodeEndFlag ? (isFirst?_I1_:_I_) : undefined;\n            }));\n        }\n\n    }, 'obj');\n\n    fixArr(res);\n\n    // 打印输出\n    // let color = require(\"./cli/colorful\");\n    // res.forEach(function(item){\n    //     let strOut = \"[\";\n    //     item.forEach(function(sub,subIndex){\n    //         strOut += ((sub===undefined?color.magenta(\"undefined\"):color.yellow(\"'\"+sub+\"'\"))  + (subIndex===(item.length-1) ? \"\" : \", \"));\n    //     });\n    //     strOut += \"]\";\n    //     console.log(strOut);\n    // });\n\n    return res.map(item => item.join('').replace(/(\\s|\\u00A0)+$/, '')).join(msReturnChar ? '\\r\\n' : '\\n');// '\\r' just for windows\n}\n\nmodule.exports = treeify;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/json-toy/lib/json-treeify.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/json-toy/lib/type-of.js":
/*!**********************************************!*\
  !*** ./node_modules/json-toy/lib/type-of.js ***!
  \**********************************************/
/***/ ((module) => {

eval("/**\n * Type check\n *\n * You'd better do not init a primitive type variable via 'new Object'\n * is would make somme confused in program!!!\n */\n\n/*\n * 获取typeString，结果里会带有'['和']'字符\n * @param obj\n * @returns {string}\n * @private\n */\nfunction _typeString(obj){\n    return Object.prototype.toString.call(obj);\n}\n\n/*\n * 获取Type\n * @param obj\n * @returns {string}\n *   _getType(1);//\"number\"\n *   _getType([]);//\"array\"\n *   _getType({});//\"object\"\n *   let p1 = new Person(\"petter\");//custom type\n *   _getType(p1);//\"person\"\n */\nfunction _getType(obj){\n    if(obj === null || obj === undefined){\n        return obj === undefined ? 'undefined' : 'null';// String(obj)\n    }\n    let typeName = _typeString(obj).slice(8, -1).toLowerCase();\n    //将object类型再细化一下,以区分出自定义类型以及细化类型\n    let tpOf = typeof obj;// 这里要用typeof关键字而非typeName这个结果,不然error的子类会不准确\n    if(typeName!=='arguments' && (tpOf==='object' || tpOf==='function')){\n        typeName = (obj.constructor && obj.constructor.name) ? obj.constructor.name.toLowerCase() : typeName;\n    }\n    return typeName;\n    \n}\n\n/*\n * 判断类型函数\n * @param type\n * @returns {Function}\n */\nfunction _isTypeOf(type){\n    type = ((typeof type === 'string' || type instanceof String) ? type : '').toLowerCase();\n    return function(obj){\n        return type === _getType(obj);\n    };\n}\n\n/*\n * 判断类型isXxx(obj)\n * @param obj\n * @returns {Boolean}\n */\nlet _Type_ = {};\n[\n    'arguments', 'array', 'date',\n    'error', 'syntaxError', 'typeError', 'rangeError',\n    'regExp', 'symbol',\n    'set', 'weakSet',\n    'map', 'weakMap'\n].forEach((t) => {\n    _Type_[`is${t[0].toUpperCase()}${t.substr(1)}`] = _isTypeOf(t);\n});\nlet isArguments = _Type_.isArguments;\nlet isSymbol = _Type_.isSymbol;\nlet isSet = _Type_.isSet;\nlet isWeakSet = _Type_.isWeakSet;\nlet isMap = _Type_.isMap;\nlet isWeakMap = _Type_.isWeakMap;\nfunction isArray(obj){\n    return _Type_.isArray(obj) || (typeof Array.isArray !=='undefined' && Array.isArray(obj));\n}\n// date 和 RegExp的判断必须要在 toString函数执行之前\nfunction isDate(obj){\n    return obj instanceof Date || _Type_.isDate(obj);\n}\nfunction isRegExp(obj){\n    return obj instanceof RegExp || _Type_.isRegExp(obj);\n}\nfunction isError(obj){\n    return _Type_.isError(obj) || obj instanceof Error;\n}\nfunction isSyntaxError(obj){\n    return _Type_.isSyntaxError(obj) || obj instanceof SyntaxError;\n}\nfunction isTypeError(obj){\n    return _Type_.isTypeError(obj) || obj instanceof TypeError;\n}\nfunction isRangeError(obj){\n    return _Type_.isRangeError(obj) || obj instanceof RangeError;\n}\n\n// isObject:这里采用原生关键字typeof判定，即：数组，任何自定义类型，都属于Object\n/* eg:\n   function Person(){};\n   let p1 = new Person();\n   isObject(p1);//true\n   isObject(Person);//false, function\n   isObject(\"12aa\");//false, string is primitive type\n   isObject([1,2,3]);//true, array is object via 'typeof'\n*/\nfunction isObject(obj) {\n    return (typeof obj === 'object' || obj instanceof Object) && obj !==null;\n}\nfunction isFunction(obj) {\n    return typeof obj === 'function' || obj instanceof Function;\n}\nfunction isNull(obj){\n    return obj === null;\n}\nfunction isUndefined(obj){\n    return obj === undefined;\n}\nfunction isNill(obj){\n    return (obj === null || obj === undefined);\n}\n// isUndefinedOrNull\n// isNullOrUndefined\nfunction isBoolean(obj){\n    return obj === true || obj === false || obj instanceof Boolean;\n}\nfunction isString(obj) {\n    return typeof obj === 'string' || obj instanceof String;\n}\nfunction isChar(obj){\n    return isString(obj) && obj.length === 1;\n}\nfunction isNumber(obj, warn) {\n    warn = warn===undefined ? true : !!warn;//default true\n    // warning when NaN\n    if(warn && obj !== obj){ // eslint-disable-line\n        console.warn('obj is NaN. Using \\'isRealNumber(obj)\\' instead of \\'isNumber(obj)\\'\\nOr using \\'isNumber(obj,false)\\' to stop warning out\\n');\n    }\n    return typeof obj === 'number' || obj instanceof Number;\n}\nfunction isNaN(obj){\n    return obj !== obj; // eslint-disable-line\n}\nfunction isRealNumber(obj){\n    return !isNaN(obj) && isNumber(obj);\n}\n// 检查是否为简单类型：除开function和object之外的所有类型均为简单类型\nfunction isPrimitive(obj){\n    return !isObject(obj) && !isFunction(obj);\n}\n// 是否还可以再展开: Object,Array,以及某些Function\nfunction isSpreadable(obj){\n    if(isArray(obj)){\n        return !!obj.length;\n    }else if(isObject(obj) || isFunction(obj)){\n        for(let j in obj){\n            if(obj.hasOwnProperty(j)){\n                return true;\n            }\n        }\n    }\n    return false;\n}\n// 递归函数判断是否为json\nfunction _isJSON(value, visited) {\n    (visited || (visited = [])).push(value);\n    return isPrimitive(value) ||\n        (isArray(value) && value.every(element => _isJSON(element, visited))) ||\n        (isObject.isFlat(value) && Object.keys(value).every((key) => {\n            let $ = Object.getOwnPropertyDescriptor(value, key);\n            return ((!isObject($.value) || !~visited.indexOf($.value))\n                    && !('get' in $) && !('set' in $)\n                    && _isJSON($.value, visited));\n        }));\n}\n// isJSON\nfunction isJSON(obj){\n    return _isJSON(obj);\n}\n// isObject.isEmpty\nisObject.isEmpty = function(obj, ownCheck){\n    if(!isObject(obj) && !isArray(obj)){\n        return false;\n    }\n    ownCheck = ownCheck || false;\n    for(let k in obj){\n        if(ownCheck){\n            if(obj.hasOwnProperty(k)){\n                return false;\n            }\n        }else{\n            return false;\n        }\n    }\n    return true;\n};\n// isObject.isEmptyOwn: return true if has none own property\nisObject.isEmptyOwn = function(obj){\n    return isObject.isEmpty(obj, true);\n};\n/*\n flat (对象的直接来源 `Object.prototype` or `null`).\n eg:\n isFlat({}) // true\n isFlat(new Type()) // false\n */\nisObject.isFlat = function(obj) {\n    if(isNull(obj)){\n        return true;\n    }else if(isObject(obj)){\n        return null===Object.getPrototypeOf(obj)\n            || (null===Object.getPrototypeOf(Object.getPrototypeOf(obj)));\n    }\n    return false;\n    \n};\n// decimal 浮点\nisNumber.decimal = function(obj){\n    return !isNaN(obj) && isNumber(obj) && (obj % 1 !== 0);\n};\n// integer 整型\nisNumber.integer = function(obj){\n    return !isNaN(obj) && isNumber(obj) && (obj % 1 === 0);\n};\n// odd 奇数\nisNumber.odd = function(obj){\n    return !isNaN(obj) && isNumber(obj) && (obj % 2 !== 0);//这里判断不使用位操作符&，因为会使得一些特殊数如Infinity的结果不对\n};\n// even 偶数\nisNumber.even = function(obj){\n    return !isNaN(obj) && isNumber(obj) && (obj % 2 === 0);\n};\n/*\n ECMAScript当对数值应用位操作符时会发生如下转换过程：\n 64位的数值被转换成32位数值，然后执行位操作，最后再将32位的结果转换回64位数值。这样，表面上看起来就好像是在操作32位数值。\n 但这个转换过程也导致了一个严重的负效应，即在对特殊的NaN和Infinity值应用位操作时，这两个值都会被当成0来处理。\n 如果对非数值进行位操作，会先使用Number()函数将该数值转换成一个数值（自动完成），然后再应用位操作，得到的结果是一个数值。\n*/\n\n/*\n * query prototype chain to check instanceof\n * @param value\n * @param Type\n * @returns {boolean}\n *\n * 用法：\n *    余原生的instanceof有区别，原生的instanceof对于简单类型的判定都是false\n *    而本例中会递归去查询原型链\n *    isInstanceOf(NaN,Number);// false\n */\n// isInstanceOf\nfunction _instOf(value, type) {\n    // 先用原生instanceof判断\n    let isInstanceOf = value instanceof type;\n    // 对于非undefined和非null的value，需要再用构造器名称判断，以避免原生instanceof的判定\n    let isConstructorNameSame, isConstructorSourceSame;\n    if (!isInstanceOf && undefined!==value && null!==value) {\n        isConstructorNameSame = (value.constructor && value.constructor.name === type.name);\n        isConstructorSourceSame = (value.constructor && String(value.constructor) == String(type));\n        isInstanceOf = (isConstructorNameSame && isConstructorSourceSame);\n        isInstanceOf = isInstanceOf || _instOf(Object.getPrototypeOf(value), type);\n    }\n    return isInstanceOf;\n}\n\n// exports\nmodule.exports = {\n    typeStr: _typeString,\n    getTypeOf: _getType,\n    isTypeOf: _isTypeOf,\n    isInstanceOf: _instOf,\n    //\n    isArguments,\n    isSymbol,\n    isSet,\n    isWeakSet,\n    isMap,\n    isWeakMap,\n    isArray,\n    isDate,\n    isRegExp,\n    isError,\n    isSyntaxError,\n    isTypeError,\n    isRangeError,\n    isObject,\n    isFunction,\n    isNull,\n    isUndefined,\n    isNill,\n    isNullOrUndefined: isNill,\n    isUndefinedOrNull: isNill,\n    isBoolean,\n    isString,\n    isChar,\n    isNumber,\n    isNaN,\n    isRealNumber,\n    isPrimitive,\n    isSpreadable,\n    isJSON\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/json-toy/lib/type-of.js\n");

/***/ })

};
;